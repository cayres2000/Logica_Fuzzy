# -*- coding: utf-8 -*-
"""Fuzzy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12kNRVZ-a-oSBInfcGoai_9g6KSj6iUaX
"""
#Rodrigo de Souza Garcia R.A.: 22.120.034-8
#Vinicius Cayres Gago R.A.: 22.120.037-1

import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
from skfuzzy import control as ctrl

# Criação das variáveis de entrada
peso = ctrl.Antecedent(np.arange(30, 201, 1), 'peso')
altura = ctrl.Antecedent(np.arange(1, 2.31, 0.01), 'altura')

#Variável de saída
imc = ctrl.Consequent(np.arange(30, 51, 1), 'imc')

# Definição das funções de pertinência para cada variável
peso['baixo'] = fuzz.trimf(peso.universe, [30, 30, 70])
peso['normal'] = fuzz.trimf(peso.universe, [50, 80, 110])
peso['alto'] = fuzz.trimf(peso.universe, [100, 160, 200])

altura['baixa'] = fuzz.trimf(altura.universe, [1, 1, 1.5])
altura['normal'] = fuzz.trimf(altura.universe, [1.4, 1.7, 2])
altura['alta'] = fuzz.trimf(altura.universe, [1.9, 2.3, 2.3])

imc['abaixo'] = fuzz.trimf(imc.universe, [30, 33, 37])
imc['normal'] = fuzz.trimf(imc.universe, [35, 38, 42])
imc['obeso'] = fuzz.trimf(imc.universe, [40, 46, 50])

# Regras Fuzzy
regra1 = ctrl.Rule(peso['baixo'] & altura['baixa'], imc['normal'])
regra2 = ctrl.Rule(peso['baixo'] & altura['normal'], imc['abaixo'])
regra3 = ctrl.Rule(peso['baixo'] & altura['alta'], imc['abaixo'])

regra4 = ctrl.Rule(peso['normal'] & altura['baixa'], imc['abaixo'])
regra5 = ctrl.Rule(peso['normal'] & altura['normal'], imc['normal'])
regra6 = ctrl.Rule(peso['normal'] & altura['alta'], imc['normal'])

regra7 = ctrl.Rule(peso['alto'] & altura['baixa'], imc['obeso'])
regra8 = ctrl.Rule(peso['alto'] & altura['normal'], imc['obeso'])
regra9 = ctrl.Rule(peso['alto'] & altura['alta'], imc['obeso'])

# Criação do sistema de inferência Fuzzy
sistema_obesidade = ctrl.ControlSystem([regra1, regra2, regra3, regra4, regra5, regra6, regra7, regra8, regra9])

# Criação da simulação Fuzzy
simulacao = ctrl.ControlSystemSimulation(sistema_obesidade)

notaPeso = int(input('Peso: '))
notaAltura = float(input('Altura: '))
simulacao.input['peso'] = notaPeso
simulacao.input['altura'] = notaAltura
simulacao.compute()

valorobesidade = simulacao.output['imc']

print("\nPeso %d \naltura %f \nObesidade de %5.2f" %(
        notaPeso,
        notaAltura,
        valorobesidade))


peso.view(sim=simulacao)
altura.view(sim=simulacao)
imc.view(sim=simulacao)

plt.show()